/*
 * Copyright (C) Canonical, Ltd.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; version 3.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_canonical_openssl_drbg_OpenSSLDrbg */

#ifndef _Included_com_canonical_openssl_drbg_OpenSSLDrbg
#define _Included_com_canonical_openssl_drbg_OpenSSLDrbg
#ifdef __cplusplus
extern "C" {
#endif
#undef com_canonical_openssl_drbg_OpenSSLDrbg_serialVersionUID
#define com_canonical_openssl_drbg_OpenSSLDrbg_serialVersionUID -2991854161009191830LL
/*
 * Class:     com_canonical_openssl_drbg_OpenSSLDrbg
 * Method:    cleanupNativeMemory0
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_canonical_openssl_drbg_OpenSSLDrbg_cleanupNativeMemory0
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_canonical_openssl_drbg_OpenSSLDrbg
 * Method:    init
 * Signature: (Ljava/lang/String;IZZ[B)J
 */
JNIEXPORT jlong JNICALL Java_com_canonical_openssl_drbg_OpenSSLDrbg_init
  (JNIEnv *, jobject, jstring, jint, jboolean, jboolean, jbyteArray);

/*
 * Class:     com_canonical_openssl_drbg_OpenSSLDrbg
 * Method:    nextBytes0
 * Signature: ([BIZ[B)V
 */
JNIEXPORT void JNICALL Java_com_canonical_openssl_drbg_OpenSSLDrbg_nextBytes0
  (JNIEnv *, jobject, jbyteArray, jint, jboolean, jbyteArray);

/*
 * Class:     com_canonical_openssl_drbg_OpenSSLDrbg
 * Method:    reseed0
 * Signature: ([BZ[B)V
 */
JNIEXPORT void JNICALL Java_com_canonical_openssl_drbg_OpenSSLDrbg_reseed0
  (JNIEnv *, jobject, jbyteArray, jboolean, jbyteArray);

/*
 * Class:     com_canonical_openssl_drbg_OpenSSLDrbg
 * Method:    generateSeed0
 * Signature: (I)[B
 */
JNIEXPORT jbyteArray JNICALL Java_com_canonical_openssl_drbg_OpenSSLDrbg_generateSeed0
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
