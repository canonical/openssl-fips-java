/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class OpenSSLKEMRSA_RSAKEMDecapsulator */

#ifndef _Included_OpenSSLKEMRSA_RSAKEMDecapsulator
#define _Included_OpenSSLKEMRSA_RSAKEMDecapsulator
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     OpenSSLKEMRSA_RSAKEMDecapsulator
 * Method:    decapsulatorInit0
 * Signature: ([B)J
 */
JNIEXPORT jlong JNICALL Java_com_canonical_openssl_keyencapsulation_OpenSSLKEMRSA_00024RSAKEMDecapsulator_decapsulatorInit0
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     OpenSSLKEMRSA_RSAKEMDecapsulator
 * Method:    engineDecapsulate0
 * Signature: ([B)[B;
 */
JNIEXPORT jbyteArray JNICALL Java_com_canonical_openssl_keyencapsulation_OpenSSLKEMRSA_00024RSAKEMDecapsulator_engineDecapsulate0
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     OpenSSLKEMRSA_RSAKEMDecapsulator
 * Method:    engineSecretSize0
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_canonical_openssl_keyencapsulation_OpenSSLKEMRSA_00024RSAKEMDecapsulator_engineSecretSize0
  (JNIEnv *, jobject);

/*
 * Class:     OpenSSLKEMRSA_RSAKEMDecapsulator
 * Method:    engineEncapsulationSize0
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_canonical_openssl_keyencapsulation_OpenSSLKEMRSA_00024RSAKEMDecapsulator_engineEncapsulationSize0
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
